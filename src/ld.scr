/*
 ============================================================================
    Name        : ld.scr
    Description : linker script
 ============================================================================
*/
/* OUTPUT_FORMAT("elf32-h8300") */
OUTPUT_ARCH(h8300h)
ENTRY("_start")

/* memory segmentation */
MEMORY
{
    /*** ROM ***/
    romall(rx)  : o = 0x000000, l = 0x080000 /* 512KB */
    vectors(r)  : o = 0x000000, l = 0x000100 /* top of ROM */
    rom(rx)     : o = 0x000100, l = 0x07ff00

    /*** RAM ***/
    ramall(rwx) : o = 0xffbf20, l = 0x004000 /* 16KB */
    buffer(rwx) : o = 0xffdf20, l = 0x001d00 /* 8KB */
    data(rwx)   : o = 0xfffc20, l = 0x000300
    stack(rw)   : o = 0xffff00, l = 0x000000 /* end of RAM */
}

SECTIONS
{
    /*** interrupt vector ***/
    .vectors : {
        vector.o(.data)
    } > vectors

    /*** text section ***/
    .text : {
        _text_start = . ; /* start of .text section */
        *(.text)
        _etext      = . ; /* end of .text section */
    } > rom /* assign ROM with .text section */

    /*** readonly data section ***/
    .rodata : {
        _rodata_start = . ; /* start of .rodata section */
        *(.strings)
        *(.rodata)
        *(.rodata.*)
        _erodata      = . ; /* end of .rodata section */
    } > rom /* assign ROM with .rodata section */

    /*** buffer section ***/
    .buffer : {
        _buffer_start = . ;
    } > buffer

    /*** data segment ***/
    .data : {
        _data_start = . ; /* start of .data section */
        *(.data)
        _edata      = . ; /* end of .data section */
    } > data AT> rom

    /*** block started by symbol segment ***/
    .bss : {
        _bss_start = . ; /* start of .bss section */
        *(.bss)
        *(COMMON)
        _ebss      = . ; /* end of .bss section */
    } > data AT> rom

    . = ALIGN(4); /* 4 byte aliginment */
    _end = . ; /* end of section */

    /*** stack ***/
    .stack : {
        _stack = . ;
    } > stack

}

