/*
 ============================================================================
    Name        : ld.scr
    Description : linker script
 ============================================================================
*/
OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
/* select entry point */
ENTRY("_start")

/* memory segmentation */
MEMORY
{
    ramall(rwx) : o = 0xffbf20, l = 0x004000 /* 16KB */
    ram(rwx)    : o = 0xffc020, l = 0x003f00
    stack(rw)   : o = 0xffff00, l = 0x000000 /* end of RAM */
}

SECTIONS
{
    /*** text section ***/
    .text : {
        _text_start = . ; /* start of .text section */
        *(.text)
        _etext      = . ; /* end of .text section */
    } > ram /* assign RAM with .text section */

    /*** readonly data section ***/
    .rodata : {
        _rodata_start = . ; /* start of .rodata section */
        *(.strings)
        *(.rodata)
        *(.rodata.*)
        _erodata      = . ; /* end of .rodata section */
    } > ram /* assign RAM with .rodata section */

    /*** data segment ***/
    .data : {
        _data_start = . ; /* start of .data section */
        *(.data)
        _edata      = . ; /* end of .data section */
    } > ram /* assign RAM with .data section */

    /*** block started by symbol segment ***/
    .bss : {
        _bss_start = . ; /* start of .bss section */
        *(.bss)
        *(COMMON)
        _ebss      = . ; /* end of .bss section */
    } > ram

    . = ALIGN(4); /* 4 byte aliginment */
    _end = . ; /* end of section */

    /*** stack ***/
    .stack : {
        _stack = . ;
    } > stack

}

